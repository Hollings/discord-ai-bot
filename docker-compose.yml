version: '3.8'

services:
  discord-bot:
    restart: always
    build:
      context: ./bot
      dockerfile: Dockerfile.bot
    volumes:
      - ./bot:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"

  worker_local:
    restart: always
    build:
      context: ./bot
      dockerfile: Dockerfile.worker
    volumes:
      - ./bot:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A common.tasks worker --loglevel=info --concurrency=1 -Q local

  worker_api:
    restart: always
    build:
      context: ./bot
      dockerfile: Dockerfile.worker
    volumes:
      - ./bot:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A common.tasks worker --loglevel=info --concurrency=3 -Q api

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
